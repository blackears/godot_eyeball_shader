/**
* MIT License
*
* Copyright (c) 2024 Mark McKay
* https://github.com/blackears/eyeball_shader
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/

#include "res://addons/eyeball_shader/shaders/random.gdshaderinc"

const vec2 rand_offsets_v2[] = {
    vec2(0.949120, -0.314913), vec2(0.841083, 0.540907), vec2(0.893404, 0.449254), vec2(0.630695, -0.776031),
    vec2(0.406110, 0.913824), vec2(-0.988027, 0.154281), vec2(0.548550, 0.836118), vec2(0.653216, 0.757172),
    vec2(-0.698146, -0.715956), vec2(0.545416, -0.838165), vec2(-0.486779, -0.873525), vec2(0.222728, -0.974881),
    vec2(-0.589999, 0.807404), vec2(0.837466, -0.546489), vec2(0.974674, -0.223629), vec2(-0.490825, -0.871258),
    vec2(0.986055, 0.166421), vec2(0.442229, 0.896902), vec2(0.537418, -0.843316), vec2(0.873168, -0.487420),
    vec2(0.638321, -0.769770), vec2(-0.726218, -0.687464), vec2(-0.899868, 0.436161), vec2(-0.401836, -0.915712),
    vec2(0.680270, -0.732962), vec2(-0.399265, 0.916835), vec2(0.520964, 0.853579), vec2(0.047733, 0.998860),
    vec2(-0.998091, -0.061762), vec2(0.936437, -0.350837), vec2(0.190176, -0.981750), vec2(-0.563695, -0.825983),
    vec2(-0.667209, -0.744871), vec2(-0.789508, 0.613741), vec2(0.466721, -0.884405), vec2(-0.993306, -0.115511),
    vec2(0.818109, -0.575063), vec2(0.753775, 0.657132), vec2(-0.496912, -0.867801), vec2(-0.999920, 0.012646),
    vec2(0.960826, 0.277151), vec2(-0.487407, -0.873175), vec2(-0.723742, 0.690071), vec2(0.943418, 0.331605),
    vec2(-0.615178, 0.788388), vec2(0.804280, 0.594251), vec2(-0.828149, -0.560507), vec2(-0.656547, -0.754285),
    vec2(-0.721802, 0.692100), vec2(-0.977227, 0.212196), vec2(0.422869, -0.906191), vec2(0.592884, -0.805288),
    vec2(-0.712337, 0.701838), vec2(0.189478, -0.981885), vec2(-0.738537, 0.674213), vec2(-0.965704, 0.259645),
    vec2(0.701638, -0.712534), vec2(-0.540003, 0.841663), vec2(-0.876495, 0.481411), vec2(0.093794, -0.995592),
    vec2(0.684885, -0.728651), vec2(0.639528, 0.768768), vec2(0.470252, -0.882532), vec2(0.968483, 0.249081),
    vec2(-0.776587, 0.630010), vec2(0.751698, -0.659507), vec2(0.803288, -0.595591), vec2(0.597610, 0.801787),
    vec2(0.782277, 0.622931), vec2(0.976590, 0.215107), vec2(0.800727, 0.599030), vec2(0.484902, 0.874569),
    vec2(-0.815639, -0.578561), vec2(0.983156, 0.182769), vec2(0.828656, -0.559758), vec2(-0.074929, 0.997189),
    vec2(-0.880242, 0.474524), vec2(0.508167, -0.861258), vec2(-0.935645, 0.352944), vec2(0.961538, -0.274673),
    vec2(-0.995429, 0.095504), vec2(-0.852889, 0.522092), vec2(-0.717822, 0.696227), vec2(0.883563, -0.468312),
    vec2(-0.747365, 0.664414), vec2(0.961453, 0.274969), vec2(0.408669, 0.912683), vec2(-0.493719, -0.869622),
    vec2(-0.545462, -0.838136), vec2(-0.385636, 0.922651), vec2(-0.859437, -0.511242), vec2(0.829608, -0.558347),
    vec2(-0.778085, -0.628159), vec2(-0.114988, 0.993367), vec2(0.826390, 0.563098), vec2(-0.999055, 0.043460),
    vec2(0.637648, -0.770328), vec2(0.916420, -0.400218), vec2(0.309418, -0.950926), vec2(-0.384889, -0.922963),
    vec2(0.593140, -0.805099), vec2(0.978125, 0.208019), vec2(0.577047, -0.816711), vec2(-0.164063, -0.986450),
    vec2(0.970763, 0.240039), vec2(0.812278, -0.583271), vec2(-0.456364, -0.889793), vec2(-0.228904, -0.973449),
    vec2(-0.999932, 0.011661), vec2(0.896340, -0.443367), vec2(0.028254, 0.999601), vec2(-0.774318, -0.632796),
    vec2(-0.993891, -0.110364), vec2(-0.516072, -0.856545), vec2(0.895601, -0.444858), vec2(-0.681744, -0.731590),
    vec2(0.433479, -0.901164), vec2(0.079306, 0.996850), vec2(0.467784, 0.883843), vec2(0.985776, -0.168065),
    vec2(0.525044, 0.851075), vec2(0.243486, -0.969905), vec2(0.980800, -0.195015), vec2(0.786212, -0.617957),
    vec2(0.404738, 0.914433), vec2(-0.940715, -0.339199), vec2(0.670568, 0.741849), vec2(0.997436, -0.071560),
    vec2(-0.655994, 0.754766), vec2(0.050117, 0.998743), vec2(0.677446, 0.735572), vec2(-0.981093, -0.193535),
    vec2(-0.318959, 0.947769), vec2(-0.174158, -0.984718), vec2(-0.351153, -0.936318), vec2(0.973810, -0.227362),
    vec2(0.970517, -0.241031), vec2(-0.993561, -0.113297), vec2(0.994579, 0.103984), vec2(-0.459306, 0.888278),
    vec2(0.628373, 0.777912), vec2(0.999842, 0.017784), vec2(0.759560, -0.650438), vec2(-0.995793, 0.091635),
    vec2(-0.527410, 0.849611), vec2(0.719852, 0.694128), vec2(0.667085, 0.744981), vec2(-0.154190, 0.988041),
    vec2(-0.992070, 0.125685), vec2(0.271136, -0.962541), vec2(0.523953, 0.851747), vec2(-0.855605, -0.517628),
    vec2(-0.488124, -0.872775), vec2(0.737606, -0.675231), vec2(0.996240, 0.086638), vec2(-0.530170, 0.847892),
    vec2(-0.956550, 0.291570), vec2(0.409695, -0.912223), vec2(-0.152894, 0.988243), vec2(0.909028, 0.416734),
    vec2(0.238263, 0.971201), vec2(-0.991063, -0.133394), vec2(0.994499, 0.104749), vec2(-0.166428, -0.986054),
    vec2(0.940725, 0.339170), vec2(-0.960948, 0.276730), vec2(0.986417, -0.164262), vec2(-0.866354, -0.499430),
    vec2(0.761207, 0.648509), vec2(0.917057, -0.398755), vec2(-0.918523, -0.395367), vec2(-0.887984, -0.459874),
    vec2(0.877043, 0.480412), vec2(-0.498266, -0.867024), vec2(-0.031609, -0.999500), vec2(0.831739, -0.555166),
    vec2(-0.999804, 0.019787), vec2(-0.875400, -0.483400), vec2(0.928018, -0.372535), vec2(0.746602, 0.665271),
    vec2(0.488762, 0.872417), vec2(-0.448137, -0.893965), vec2(-0.938945, 0.344068), vec2(-0.853338, -0.521357),
    vec2(-0.551723, 0.834027), vec2(0.666235, 0.745741), vec2(-0.518619, 0.855005), vec2(-0.999916, 0.012967),
    vec2(0.667191, -0.744887), vec2(-0.089039, 0.996028), vec2(0.199539, -0.979890), vec2(0.441702, -0.897162),
    vec2(0.104599, 0.994514), vec2(0.895650, -0.444759), vec2(0.973117, 0.230313), vec2(0.999972, -0.007494),
    vec2(-0.624740, 0.780833), vec2(-0.978377, 0.206830), vec2(0.784485, 0.620147), vec2(0.962898, 0.269867),
    vec2(-0.724641, 0.689126), vec2(-0.804475, 0.593986), vec2(-0.782019, 0.623254), vec2(0.575998, -0.817451),
    vec2(-0.976301, 0.216416), vec2(0.295235, 0.955425), vec2(-0.983729, -0.179661), vec2(0.082890, 0.996559),
    vec2(0.097908, 0.995195), vec2(-0.839421, -0.543481), vec2(0.439913, -0.898040), vec2(0.941000, 0.338406),
    vec2(-1.000000, -0.000122), vec2(-0.475140, 0.879910), vec2(0.781655, 0.623711), vec2(-0.537840, 0.843047),
    vec2(0.123621, -0.992330), vec2(-0.860180, -0.509991), vec2(0.993440, 0.114355), vec2(0.977121, 0.212685),
    vec2(-0.797170, -0.603755), vec2(-0.863872, 0.503711), vec2(-0.964450, -0.264264), vec2(-0.416166, 0.909289),
    vec2(-0.718157, -0.695882), vec2(0.479167, -0.877724), vec2(-0.044337, -0.999017), vec2(0.694055, 0.719922),
    vec2(-0.929833, -0.367981), vec2(0.910056, 0.414486), vec2(-0.467544, -0.883970), vec2(0.203657, -0.979042),
    vec2(0.867379, -0.497649), vec2(0.459009, -0.888431), vec2(-0.998795, -0.049083), vec2(-0.942038, -0.335506),
    vec2(-0.643452, -0.765486), vec2(0.481953, 0.876197), vec2(-0.047783, -0.998858), vec2(-0.719467, -0.694527),
    vec2(-0.659671, 0.751554), vec2(0.322405, 0.946602), vec2(-0.470010, 0.882661), vec2(-0.556015, 0.831172),
    vec2(-0.766164, -0.642645), vec2(0.102887, -0.994693), vec2(-0.290953, -0.956737), vec2(0.154950, 0.987922),
    vec2(0.773348, -0.633982), vec2(-0.629535, 0.776972), vec2(0.556167, 0.831070), vec2(-0.999452, -0.033105),
    vec2(-0.966115, -0.258112), vec2(0.623252, -0.782021), vec2(-0.075754, 0.997127), vec2(-0.883751, 0.467958)
};
const uint RAND_OFFSETS_V2_SIZE = 256u;

const float FLOAT_MAX = 1.0 / 0.0;

float voronoi_cell_2d(vec2 sample_pos, float jitter_scale, uint rand_seed_val) {
	ivec2 cell_pos = ivec2(floor(sample_pos));
	vec2 cell_offset = sample_pos - vec2(cell_pos);
	
	//return cell_offset.y;
	
//	float min_dist = FLOAT_MAX;
	float min_dist = 1e10;
	
	for (int j = -1; j <= 1; ++j) {
		for (int i = -1; i <= 1; ++i) {

			uint index = rand_range_u(hash_f3(uvec3(uint(i + cell_pos.x), uint(j + cell_pos.y), rand_seed_val)), 0, RAND_OFFSETS_V2_SIZE);
			vec2 offset = rand_offsets_v2[index].xy * jitter_scale;
			vec2 centroid = vec2(cell_pos) + vec2(float(i) + .5, float(j) + .5) + offset;
			
			float dist = distance(centroid, sample_pos);
			min_dist = min(min_dist, dist);
		}
	}
	
	return min_dist;
}
